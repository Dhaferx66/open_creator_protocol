/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { UpdatePolicyArg } from '../types/UpdatePolicyArg';
/**
 * @category Instructions
 * @category UpdatePolicy
 * @category generated
 */
export declare type UpdatePolicyInstructionArgs = {
    arg: UpdatePolicyArg;
};
/**
 * @category Instructions
 * @category UpdatePolicy
 * @category generated
 */
export declare const updatePolicyStruct: beet.FixableBeetArgsStruct<UpdatePolicyInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _updatePolicy_ instruction
 *
 * @property [_writable_] policy
 * @property [**signer**] authority
 * @category Instructions
 * @category UpdatePolicy
 * @category generated
 */
export declare type UpdatePolicyInstructionAccounts = {
    policy: web3.PublicKey;
    authority: web3.PublicKey;
    systemProgram?: web3.PublicKey;
};
export declare const updatePolicyInstructionDiscriminator: number[];
/**
 * Creates a _UpdatePolicy_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category UpdatePolicy
 * @category generated
 */
export declare function createUpdatePolicyInstruction(accounts: UpdatePolicyInstructionAccounts, args: UpdatePolicyInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
